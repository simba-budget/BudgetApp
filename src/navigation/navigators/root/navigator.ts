import { StaticParamList } from '@react-navigation/native';
import { createStackNavigator, StackNavigationProp } from '@react-navigation/stack';
import {
  AccountAddScreen,
  AccountEditScreen,
  AccountSelectScreen,
  AccountsLoadingScreen,
  CategoriesScreen,
  CategoryAddScreen,
  CategoryEditScreen,
  CategoryScreen,
  ContributionAddScreen,
  ContributionEditScreen,
  ContributionScreen,
  ContributionsScreen,
  ExternalAccountScreen,
  ExternalAccountsScreen,
  GoalAddScreen,
  GoalEditScreen,
  GoalScreen,
  InvitationAddScreen,
  InvitationScreen,
  InvitationsScreen,
  MemberEditScreen,
  MemberScreen,
  MembersScreen,
  MerchantAddScreen,
  MerchantEditScreen,
  MerchantScreen,
  MerchantsScreen,
  NotificationsScreen,
  PrivacyPolicyScreen,
  RegistrationScreen,
  SendOtpScreen,
  SubscriptionAddScreen,
  SubscriptionEditScreen,
  SubscriptionScreen,
  TagAddScreen,
  TagEditScreen,
  TagScreen,
  TagsScreen,
  TermsAndConditionsScreen,
  TransactionAddScreen,
  TransactionDeleteScreen,
  TransactionEditScreen,
  TransactionScreen,
  VerifyOtpScreen,
  WelcomeScreen,
} from '@screens';
import { View } from 'react-native';

import { useIsAccountSelected, useIsLoggedIn, useIsLoggedOut } from '../../hooks';
import { RootLayout } from '../../layouts';
import { bottomSheetOptions, hiddenOptions, stackOptions } from '../../options';
import BottomTabs, { bottomTabsRoute } from '../bottomTabs';

import {
  accountAddRoute,
  accountEditRoute,
  accountRoute,
  accountSelectRoute,
  accountsLoadingRoute,
  authRoute,
  bottomSheetRoute,
  categoriesRoute,
  categoryAddRoute,
  categoryEditRoute,
  categoryRoute,
  contributionAddRoute,
  contributionEditRoute,
  contributionRoute,
  contributionsRoute,
  externalAccountRoute,
  externalAccountsRoute,
  goalAddRoute,
  goalEditRoute,
  goalRoute,
  invitationAddRoute,
  invitationRoute,
  invitationsRoute,
  memberEditRoute,
  memberRoute,
  membersRoute,
  merchantAddRoute,
  merchantEditRoute,
  merchantRoute,
  merchantsRoute,
  notificationsRoute,
  openBankingRoute,
  privacyPolicyRoute,
  protectedRoute,
  publicRoute,
  registrationRoute,
  sendOtpRoute,
  subscriptionAddRoute,
  subscriptionEditRoute,
  subscriptionRoute,
  tagAddRoute,
  tagEditRoute,
  tagRoute,
  tagsRoute,
  termsAndConditionsRoute,
  transactionAddRoute,
  transactionDeleteRoute,
  transactionEditRoute,
  transactionRoute,
  verifyOtpRoute,
  welcomeRoute,
} from './types';

const RootStack = createStackNavigator({
  screenOptions: hiddenOptions,
  screenLayout: RootLayout,
  groups: {
    [authRoute]: {
      if: useIsLoggedOut,
      screenOptions: stackOptions,
      screens: {
        [welcomeRoute]: WelcomeScreen,
        [sendOtpRoute]: SendOtpScreen,
        [verifyOtpRoute]: VerifyOtpScreen,
        [registrationRoute]: RegistrationScreen,
      },
    },
    [protectedRoute]: {
      if: useIsLoggedIn,
      screenOptions: stackOptions,
      initialRouteName: accountsLoadingRoute,
      screens: {
        [accountsLoadingRoute]: AccountsLoadingScreen,
        [accountAddRoute]: AccountAddScreen,
        [accountEditRoute]: AccountEditScreen,
        [notificationsRoute]: NotificationsScreen,
      },
    },
    [accountRoute]: {
      if: useIsAccountSelected,
      screenOptions: stackOptions,
      initialRouteName: bottomTabsRoute,
      screens: {
        [bottomTabsRoute]: { screen: BottomTabs, options: hiddenOptions },
        [contributionAddRoute]: ContributionAddScreen,
        [contributionEditRoute]: ContributionEditScreen,
        [contributionRoute]: ContributionScreen,
        [contributionsRoute]: ContributionsScreen,
        [goalAddRoute]: GoalAddScreen,
        [goalEditRoute]: GoalEditScreen,
        [goalRoute]: GoalScreen,
        [categoriesRoute]: CategoriesScreen,
        [categoryRoute]: CategoryScreen,
        [invitationRoute]: InvitationScreen,
        [invitationsRoute]: InvitationsScreen,
        [tagsRoute]: TagsScreen,
        [tagEditRoute]: TagEditScreen,
        [memberRoute]: MemberScreen,
        [memberEditRoute]: MemberEditScreen,
        [subscriptionAddRoute]: SubscriptionAddScreen,
        [subscriptionEditRoute]: SubscriptionEditScreen,
        [merchantsRoute]: MerchantsScreen,
        [merchantAddRoute]: MerchantAddScreen,
        [merchantEditRoute]: MerchantEditScreen,
        [merchantRoute]: MerchantScreen,
        [externalAccountsRoute]: ExternalAccountsScreen,
        [externalAccountRoute]: ExternalAccountScreen,
        [openBankingRoute]: View,
      },
    },
    [bottomSheetRoute]: {
      screenOptions: bottomSheetOptions,
      screens: {
        [accountSelectRoute]: AccountSelectScreen,
        [membersRoute]: MembersScreen,
        [transactionRoute]: TransactionScreen,
        [subscriptionRoute]: SubscriptionScreen,
        [tagAddRoute]: TagAddScreen,
        [tagRoute]: TagScreen,
        [invitationAddRoute]: InvitationAddScreen,
        [transactionDeleteRoute]: TransactionDeleteScreen,
        [transactionAddRoute]: TransactionAddScreen,
        [transactionEditRoute]: TransactionEditScreen,
        [categoryAddRoute]: CategoryAddScreen,
        [categoryEditRoute]: CategoryEditScreen,
      },
    },
    [publicRoute]: {
      screenOptions: stackOptions,
      screens: {
        [privacyPolicyRoute]: PrivacyPolicyScreen,
        [termsAndConditionsRoute]: TermsAndConditionsScreen,
      },
    },
  },
});

export type RootParams = StaticParamList<typeof RootStack>;
export type RootNavigation = StackNavigationProp<RootParams>;

export default RootStack;
